@prefix map: <file:/Users/hjs/Programming/D2RQ/d2r-server-0.3.2/netbeans-local.n3#> .
@prefix db: <> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix baetle: <http://xmlns.com/baetle/#> .
@prefix awol: <http://bblfish.net/work/atom-owl/2006-06-06/#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix dcterms: <http://purl.org/dc/terms/> . 
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "com.mysql.jdbc.Driver";
	d2rq:jdbcDSN "jdbc:mysql://localhost:3306/issuezilla";
	d2rq:username "root";
	d2rq:password "test";
	.

# Table activity
map:activity a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	# Sorry, I don't know which columns to put into the uriPattern
	# because the table doesn't have a primary key
	d2rq:uriPattern "activity";
	d2rq:class vocab:activity;
	.
map:activity__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:activity;
	d2rq:property rdfs:label;
	d2rq:pattern "activity #";
	.
map:activity_issue_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:activity;
	d2rq:property vocab:activity_issue_id;
	d2rq:refersToClassMap map:issue;
	d2rq:join "activity.issue_id = issue.issue_id";
	.
map:activity_who a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:activity;
	d2rq:property vocab:activity_who;
	d2rq:column "activity.who";
	.
map:activity_what a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:activity;
	d2rq:property vocab:activity_what;
	d2rq:column "activity.what";
	.
map:activity_oldvalue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:activity;
	d2rq:property vocab:activity_oldvalue;
	d2rq:column "activity.oldvalue";
	.
map:activity_newvalue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:activity;
	d2rq:property vocab:activity_newvalue;
	d2rq:column "activity.newvalue";
	.
map:activity_whn a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:activity;
	d2rq:property vocab:activity_whn;
	d2rq:column "activity.whn";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "activity.whn != '0000'";
	.

# Table attachment

## First we create the content classes
map:attachmentContent a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:bNodeIdColumns "attachment.attachid";
	d2rq:class awol:Content;
	.
map:attachment_mimetype a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:attachmentContent;
	d2rq:property awol:type;
	d2rq:column "attachment.mimetype";
	.
#Don't see the need for this
#map:attachment_filename a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:attachmentContent;
#	d2rq:property vocab:attachment_filename;
#	d2rq:column "attachment.filename";
#	.
map:attachment_url a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:attachmentContent;
    d2rq:property awol:src;
	d2rq:uriColumn "attachment.url";
	.

## here we deal with the attachment as a post
map:attachment a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://www.netbeans.org/issues/show_bug.cgi?id=@@attachment.issue_id@@#attach_@@attachment.attachid@@";
	d2rq:class sioc:Post;
	.
#map:attachment__label a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:attachment;
#	d2rq:property rdfs:label;
#	d2rq:pattern "attachment #";
#	.
map:attachment_attachid a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:attachment;
	d2rq:property awol:content;
	d2rq:refersToClassMap map:attachmentContent;
	.
map:attachment_description a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:attachment;
	d2rq:property dc:title;
	d2rq:column "attachment.description";
	.

# Table block
# this is moved to the issue class map
#map:block a d2rq:ClassMap;
#	d2rq:dataStorage map:database;
#	# Sorry, I don't know which columns to put into the uriPattern
#	# because the table doesn't have a primary key
#	d2rq:uriPattern "block";
#	d2rq:class vocab:block;
#	.
#map:block__label a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:block;
#	d2rq:property rdfs:label;
#	d2rq:pattern "block #";
#	.
#map:block_issue_id a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:block;
#	d2rq:property vocab:block_issue_id;
#	d2rq:refersToClassMap map:issue;
#	d2rq:join "block.issue_id = issue.issue_id";
#	.
#map:block_block a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:block;
#	d2rq:property vocab:block_block;
#	d2rq:column "block.block";
#	.

# Table bug_age
map:bug_age a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	# Sorry, I don't know which columns to put into the uriPattern
	# because the table doesn't have a primary key
	d2rq:uriPattern "bug_age";
	d2rq:class vocab:bug_age;
	.
map:bug_age__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:bug_age;
	d2rq:property rdfs:label;
	d2rq:pattern "bug_age #";
	.
map:bug_age_mdate a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:bug_age;
	d2rq:property vocab:bug_age_mdate;
	d2rq:column "bug_age.mdate";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "bug_age.mdate != '0000'";
	.
map:bug_age_component a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:bug_age;
	d2rq:property vocab:bug_age_component;
	d2rq:column "bug_age.component";
	.
map:bug_age_prio a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:bug_age;
	d2rq:property vocab:bug_age_prio;
	d2rq:column "bug_age.prio";
	.
map:bug_age_age1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:bug_age;
	d2rq:property vocab:bug_age_age1;
	d2rq:column "bug_age.age1";
	d2rq:datatype xsd:decimal;
	.
map:bug_age_age2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:bug_age;
	d2rq:property vocab:bug_age_age2;
	d2rq:column "bug_age.age2";
	d2rq:datatype xsd:decimal;
	.
map:bug_age_age3 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:bug_age;
	d2rq:property vocab:bug_age_age3;
	d2rq:column "bug_age.age3";
	d2rq:datatype xsd:decimal;
	.
map:bug_age_age4 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:bug_age;
	d2rq:property vocab:bug_age_age4;
	d2rq:column "bug_age.age4";
	d2rq:datatype xsd:decimal;
	.

# Table cc
# we use this from the Issue class Map
#map:cc a d2rq:ClassMap;
#	d2rq:dataStorage map:database;
#	# Sorry, I don't know which columns to put into the uriPattern
#	# because the table doesn't have a primary key
#	d2rq:uriPattern "cc";
#	d2rq:class vocab:cc;
#	.
#map:cc__label a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:cc;
#	d2rq:property rdfs:label;
#	d2rq:pattern "cc #";
#	.
#map:cc_issue_id a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:cc;
#	d2rq:property vocab:cc_issue_id;
#	d2rq:refersToClassMap map:issue;
#	d2rq:join "cc.issue_id = issue.issue_id";
#	.
#map:cc_cc a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:cc;
#	d2rq:property vocab:cc_cc;
#	d2rq:column "cc.cc";
#	.

# Table dependson
#map:dependson a d2rq:ClassMap;
#	d2rq:dataStorage map:database;
#	d2rq:uriPattern "http://www.netbeans.org/issues/show_bug.cgi?id=@@issue.issue_id@@#it";
#	d2rq:class vocab:dependson;
#	.
#map:dependson__label a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:dependson;
#	d2rq:property rdfs:label;
#	d2rq:pattern "dependson #";
#	.
#map:dependson_issue_id a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:dependson;
#	d2rq:property vocab:dependson_issue_id;
#	d2rq:refersToClassMap map:issue;
#	d2rq:join "dependson.issue_id = issue.issue_id";
#	.
#map:dependson_depends a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:dependson;
#	d2rq:property vocab:dependson_depends;
#	d2rq:column "dependson.depends";
#	.

# Table history
map:history a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	# Sorry, I don't know which columns to put into the uriPattern
	# because the table doesn't have a primary key
	d2rq:uriPattern "history";
	d2rq:class vocab:history;
	.
map:history__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property rdfs:label;
	d2rq:pattern "history #";
	.
map:history_whn a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_whn;
	d2rq:column "history.whn";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "history.whn != '0000'";
	.
map:history_issue_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_issue_id;
	d2rq:refersToClassMap map:issue;
	d2rq:join "history.issue_id = issue.issue_id";
	.
map:history_component a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_component;
	d2rq:column "history.component";
	.
map:history_priority a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_priority;
	d2rq:column "history.priority";
	.
map:history_issue_status a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_issue_status;
	d2rq:column "history.issue_status";
	.
map:history_issue_type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_issue_type;
	d2rq:column "history.issue_type";
	.
map:history_resolution a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_resolution;
	d2rq:column "history.resolution";
	.
map:history_version a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_version;
	d2rq:column "history.version";
	.
map:history_subcomponent a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_subcomponent;
	d2rq:column "history.subcomponent";
	.
map:history_target_milestone a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_target_milestone;
	d2rq:column "history.target_milestone";
	.
map:history_short_desc a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_short_desc;
	d2rq:column "history.short_desc";
	.
map:history_keyword a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:history;
	d2rq:property vocab:history_keyword;
	d2rq:column "history.keyword";
	.

# Table issue
map:issue a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://www.netbeans.org/issues/show_bug.cgi?id=@@issue.issue_id@@#it";
	d2rq:class baetle:Issue;
	.
map:issue__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property rdfs:label;
	d2rq:pattern "NetBeans issue #@@issue.issue_id@@";
	.
map:issue_attachment a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property sioc:container_of;
	d2rq:refersToClassMap map:attachment;
	d2rq:join "attachment.issue_id = issue.issue_id";
	.
map:issue_post a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property sioc:container_of;
	d2rq:refersToClassMap map:long_desc;
	d2rq:join "long_desc.issue_id = issue.issue_id";
	.

#
# Do we still need issue ids when we have URLs to identify an issue?
# This could be useful relative to a user interface, or for human shorthand, but
# then that is allready in the label above.
#
#map:issue_issue_id a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:issue;
#	d2rq:property vocab:issue_issue_id;
#	d2rq:column "issue.issue_id";
#	d2rq:datatype xsd:decimal;
#	.
map:issue_issue_status a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:status;
	d2rq:uriPattern "http://wiki.netbeans.org/baetle/status#@@issue.issue_status@@";
	.
map:issue_priority a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:priority;
	d2rq:uriPattern "http://wiki.netbeans.org/baetle/priorities#@@issue.priority@@";
	.
# We use a relation to a class here, and not to an individual state, since we don't have 
# information here about the state.    
map:issue_resolution a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:resolution;
	d2rq:uriPattern "http://wiki.netbeans.org/baetle/resolution#@@issue.resolution@@";
	.
# Components are way to loosely defined here to be anything more than tags    
# note how there is no use of "keywords" in the database
map:issue_component a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property awol:category;
    d2rq:condition "issue.component != ''";
	d2rq:uriPattern "http://wiki.netbeans.org/components/@@issue.component@@";
	.
# if a version is specified, then I think we have a binary we can point to
# I imagine some binary being available at the constructed url
map:issue_version a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:about;
	d2rq:uriPattern "http://download.netbeans.org/@@issue.component@@/@@issue.version@@";
	.
map:issue_rep_platform a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:platform;
	d2rq:uriPattern "http://wiki.netbeans.org/platforms#@@issue.rep_platform@@";
	.
map:issue_assigned_to a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:assigned_to;
    d2rq:join "issue.assigned_to = issue_user.username";
	d2rq:uriPattern "http://netbeans.org/people/@@issue_user.user_id@@";
	.
map:issue_delta_ts a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:updated;
	d2rq:column "issue.delta_ts";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "issue.delta_ts != '0000'";
	.
#again the subcomponents here are really vaguely defined.
#so I'd rather use a tag here.
map:issue_subcomponent a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property awol:category;
    d2rq:condition "issue.subcomponent != ''";
	d2rq:uriPattern "http://wiki.netbeans.org/components/@@issue.subcomponent@@";
	.
map:issue_reporter a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:reporter;
    d2rq:join "issue.reporter = issue_user.username";
	d2rq:uriPattern "http://netbeans.org/people/@@issue_user.user_id@@";
	.
# or is 'TBD' a valid milestone?
map:issue_target_milestone a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:target_milestone;
	d2rq:uriPattern "http://wiki.netbeans.org/milestones/#@@issue.target_milestone@@";
    d2rq:condition "issue.target_milestone != 'TBD'";
	.
map:issue_issue_type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property rdf:type;
	d2rq:uriPattern "http://wiki.netbeans.org/issuetypes#@@issue.issue_type@@";
	.
map:issue_creation_ts a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:raised;
	d2rq:column "issue.creation_ts";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "issue.creation_ts != '0000'";
	.
map:issue_qa_contact a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:qa_contact;
    d2rq:join "issue.qa_contact = issue_user.username";
	d2rq:uriPattern "http://netbeans.org/people/@@issue_user.user_id@@";
	.
#what is this?
#map:issue_status_whiteboard a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:issue;
#	d2rq:property vocab:issue_status_whiteboard;
#	d2rq:column "issue.status_whiteboard";
#	.
map:issue_votes a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:votes;
	d2rq:column "issue.votes";
	d2rq:datatype xsd:decimal;
	.
map:issue_op_sys a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:operating_system;
	d2rq:uriPattern "http://wiki.netbeans.org/os/@@issue.op_sys@@";
	.
map:issue_short_desc a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:summary;
	d2rq:column "issue.short_desc";
	.
#todo: the keywords need to be split up by ","
map:issue_keyword a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property awol:category;
    d2rq:condition "issue.keyword != ''";
	d2rq:uriPattern "http://wiki.netbeans.org/keywords/@@issue.keyword@@";
	.
map:issue_interested a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:issue;    
	d2rq:property baetle:interested;
    d2rq:join "issue.issue_id = cc.issue_id";
    d2rq:join "cc.cc = issue_user.username";
    d2rq:refersToClassMap map:issue_user;
    .
map:issue_block a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:issue;    
	d2rq:property baetle:blocks;
    d2rq:join "issue.issue_id = block.issue_id";
	d2rq:uriPattern "http://www.netbeans.org/issues/show_bug.cgi?id=@@block.block@@#it";
    .
#does not work, kills cpu
#map:issue_block a d2rq:PropertyBridge;
#     d2rq:belongsToClassMap map:issue;
# 	 d2rq:property baetle:blocks;
#     d2rq:join "issue.issue_id = block.issue_id";
#     d2rq:join "block.block = issue.issue_id";
#     d2rq:refersToClassMap map:issue;
#     d2rq:alias "issue AS block"
#     .
map:issue_dependson a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue;
	d2rq:property baetle:depends_on;
    d2rq:join "issue.issue_id = dependson.issue_id";
	d2rq:uriPattern "http://www.netbeans.org/issues/show_bug.cgi?id=@@dependson.depends@@#it";
    .

# Table issue_user
map:issue_user a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://netbeans.org/people/@@issue_user.user_id@@";
	d2rq:class sioc:User;
	.
#map:issue_user__label a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:issue_user;
#	d2rq:property rdfs:label;
#	d2rq:pattern "issue_user #@@issue_user.user_id@@";
#	.
#map:issue_user_user_id a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:issue_user;
#	d2rq:property vocab:issue_user_user_id;
#	d2rq:column "issue_user.user_id";
#	d2rq:datatype xsd:decimal;
#	.
map:issue_user_username a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue_user;
	d2rq:property foaf:accountName;
	d2rq:column "issue_user.username";
	.
#not sure what this is
#map:issue_user_cat_id a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:issue_user;
#	d2rq:property vocab:issue_user_cat_id;
#	d2rq:column "issue_user.cat_id";
#	d2rq:datatype xsd:decimal;
#	.
map:issue_user_email a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:issue_user;
	d2rq:property sioc:email;
	d2rq:uriPattern "mailto:@@issue_user.email@@";
	.

# Table long_desc
map:long_desc a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://www.netbeans.org/issues/show_bug.cgi?id=@@long_desc.issue_id@@#comment_@@long_desc.ldid@@";
	d2rq:class sioc:Post;
	.
map:long_desc__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:long_desc;
	d2rq:property rdfs:label;
	d2rq:pattern "Netbeans comment on @@long_desc.issue_id@@ with id @@long_desc.ldid@@";
	.
#map:long_desc_ldid a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:long_desc;
#	d2rq:property vocab:long_desc_ldid;
#	d2rq:column "long_desc.ldid";
#	d2rq:datatype xsd:decimal;
#	.
map:long_desc_who a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:long_desc;
	d2rq:property sioc:has_creator;
    d2rq:join "long_desc.who = issue_user.username";
	d2rq:uriPattern "http://netbeans.org/people/@@issue_user.user_id@@";
	.
map:long_desc_issue_when a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:long_desc;
	d2rq:property dcterms:created;
	d2rq:column "long_desc.issue_when";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "long_desc.issue_when != '0000'";
	.
map:long_desc_thetext a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:long_desc;
	d2rq:property sioc:content;
	d2rq:column "long_desc.thetext";
	.

# Table testbuild
map:testbuild a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "testbuild/@@testbuild.xtestresults_id@@";
	d2rq:class vocab:testbuild;
	.
map:testbuild__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property rdfs:label;
	d2rq:pattern "testbuild #@@testbuild.xtestresults_id@@";
	.
map:testbuild_build_number a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_build_number;
	d2rq:column "testbuild.build_number";
	.
map:testbuild_host_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_host_name;
	d2rq:column "testbuild.host_name";
	.
map:testbuild_state a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_state;
	d2rq:column "testbuild.state";
	d2rq:datatype xsd:decimal;
	.
map:testbuild_xtestresults_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_xtestresults_id;
	d2rq:column "testbuild.xtestresults_id";
	d2rq:datatype xsd:decimal;
	.
map:testbuild_weblink a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_weblink;
	d2rq:column "testbuild.weblink";
	.
map:testbuild_jdk_version a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_jdk_version;
	d2rq:column "testbuild.jdk_version";
	.
map:testbuild_project_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_project_id;
	d2rq:column "testbuild.project_id";
	.
map:testbuild_project a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_project;
	d2rq:column "testbuild.project";
	.
map:testbuild_osname a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_osname;
	d2rq:column "testbuild.osname";
	.
map:testbuild_time a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_time;
	d2rq:column "testbuild.time";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "testbuild.time != '0000'";
	.
map:testbuild_testedtype a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testbuild;
	d2rq:property vocab:testbuild_testedtype;
	d2rq:column "testbuild.testedtype";
	.

# Table testcase
map:testcase a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "testcase/@@testcase.testcase_id@@";
	d2rq:class vocab:testcase;
	.
map:testcase__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcase;
	d2rq:property rdfs:label;
	d2rq:pattern "testcase #@@testcase.testcase_id@@";
	.
map:testcase_testcase_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcase;
	d2rq:property vocab:testcase_testcase_id;
	d2rq:column "testcase.testcase_id";
	d2rq:datatype xsd:decimal;
	.
map:testcase_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcase;
	d2rq:property vocab:testcase_name;
	d2rq:column "testcase.name";
	.
map:testcase_classname a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcase;
	d2rq:property vocab:testcase_classname;
	d2rq:column "testcase.classname";
	.
map:testcase_suite_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcase;
	d2rq:property vocab:testcase_suite_id;
	d2rq:column "testcase.suite_id";
	d2rq:datatype xsd:decimal;
	.
map:testcase_result a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcase;
	d2rq:property vocab:testcase_result;
	d2rq:column "testcase.result";
	.
map:testcase_testtype a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcase;
	d2rq:property vocab:testcase_testtype;
	d2rq:column "testcase.testtype";
	.
map:testcase_lastxtestresults_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcase;
	d2rq:property vocab:testcase_lastxtestresults_id;
	d2rq:column "testcase.lastxtestresults_id";
	d2rq:datatype xsd:decimal;
	.
map:testcase_testproject_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcase;
	d2rq:property vocab:testcase_testproject_id;
	d2rq:column "testcase.testproject_id";
	d2rq:datatype xsd:int;
	.

# Table testcaseissue
map:testcaseissue a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "testcaseissue/@@testcaseissue.s1s_testcase_id@@";
	d2rq:class vocab:testcaseissue;
	.
map:testcaseissue__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcaseissue;
	d2rq:property rdfs:label;
	d2rq:pattern "testcaseissue #@@testcaseissue.s1s_testcase_id@@";
	.
map:testcaseissue_issue_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcaseissue;
	d2rq:property vocab:testcaseissue_issue_id;
	d2rq:column "testcaseissue.issue_id";
	d2rq:datatype xsd:decimal;
	.
map:testcaseissue_testcase_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcaseissue;
	d2rq:property vocab:testcaseissue_testcase_id;
	d2rq:column "testcaseissue.testcase_id";
	d2rq:datatype xsd:decimal;
	.
map:testcaseissue_s1s_testcase_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcaseissue;
	d2rq:property vocab:testcaseissue_s1s_testcase_id;
	d2rq:column "testcaseissue.s1s_testcase_id";
	d2rq:datatype xsd:decimal;
	.
map:testcaseissue_xtestresults_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcaseissue;
	d2rq:property vocab:testcaseissue_xtestresults_id;
	d2rq:column "testcaseissue.xtestresults_id";
	d2rq:datatype xsd:decimal;
	.
map:testcaseissue_evaluation_time a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testcaseissue;
	d2rq:property vocab:testcaseissue_evaluation_time;
	d2rq:column "testcaseissue.evaluation_time";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "testcaseissue.evaluation_time != '0000'";
	.

# Table testmail
map:testmail a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	# Sorry, I don't know which columns to put into the uriPattern
	# because the table doesn't have a primary key
	d2rq:uriPattern "testmail";
	d2rq:class vocab:testmail;
	.
map:testmail__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testmail;
	d2rq:property rdfs:label;
	d2rq:pattern "testmail #";
	.
map:testmail_user_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testmail;
	d2rq:property vocab:testmail_user_id;
	d2rq:column "testmail.user_id";
	d2rq:datatype xsd:decimal;
	.
map:testmail_type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testmail;
	d2rq:property vocab:testmail_type;
	d2rq:column "testmail.type";
	.
map:testmail_type_value a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testmail;
	d2rq:property vocab:testmail_type_value;
	d2rq:column "testmail.type_value";
	.
map:testmail_testedtype a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testmail;
	d2rq:property vocab:testmail_testedtype;
	d2rq:column "testmail.testedtype";
	.
map:testmail_testinggroup a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testmail;
	d2rq:property vocab:testmail_testinggroup;
	d2rq:column "testmail.testinggroup";
	.
map:testmail_team a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testmail;
	d2rq:property vocab:testmail_team;
	d2rq:column "testmail.team";
	.
map:testmail_testproject_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testmail;
	d2rq:property vocab:testmail_testproject_id;
	d2rq:column "testmail.testproject_id";
	d2rq:datatype xsd:int;
	.

# Table testproject
map:testproject a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "testproject/@@testproject.id@@";
	d2rq:class vocab:testproject;
	.
map:testproject__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testproject;
	d2rq:property rdfs:label;
	d2rq:pattern "testproject #@@testproject.id@@";
	.
map:testproject_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testproject;
	d2rq:property vocab:testproject_id;
	d2rq:column "testproject.id";
	d2rq:datatype xsd:int;
	.
map:testproject_project_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testproject;
	d2rq:property vocab:testproject_project_name;
	d2rq:column "testproject.project_name";
	.
map:testproject_project_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testproject;
	d2rq:property vocab:testproject_project_id;
	d2rq:column "testproject.project_id";
	.

# Table testsuitecase
map:testsuitecase a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "testsuitecase/@@testsuitecase.testsuitecase_id@@";
	d2rq:class vocab:testsuitecase;
	.
map:testsuitecase__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testsuitecase;
	d2rq:property rdfs:label;
	d2rq:pattern "testsuitecase #@@testsuitecase.testsuitecase_id@@";
	.
map:testsuitecase_testsuitecase_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testsuitecase;
	d2rq:property vocab:testsuitecase_testsuitecase_id;
	d2rq:column "testsuitecase.testsuitecase_id";
	d2rq:datatype xsd:decimal;
	.
map:testsuitecase_module_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testsuitecase;
	d2rq:property vocab:testsuitecase_module_name;
	d2rq:column "testsuitecase.module_name";
	.
map:testsuitecase_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testsuitecase;
	d2rq:property vocab:testsuitecase_name;
	d2rq:column "testsuitecase.name";
	.

# Table testuser
map:testuser a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "testuser/@@testuser.user_id@@";
	d2rq:class vocab:testuser;
	.
map:testuser__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testuser;
	d2rq:property rdfs:label;
	d2rq:pattern "testuser #@@testuser.user_id@@";
	.
map:testuser_user_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testuser;
	d2rq:property vocab:testuser_user_id;
	d2rq:column "testuser.user_id";
	d2rq:datatype xsd:decimal;
	.
map:testuser_user_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testuser;
	d2rq:property vocab:testuser_user_name;
	d2rq:column "testuser.user_name";
	.
map:testuser_user_email a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:testuser;
	d2rq:property vocab:testuser_user_email;
	d2rq:column "testuser.user_email";
	.

# Table user_category
map:user_category a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "user_category/@@user_category.cat_id@@";
	d2rq:class vocab:user_category;
	.
map:user_category__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:user_category;
	d2rq:property rdfs:label;
	d2rq:pattern "user_category #@@user_category.cat_id@@";
	.
map:user_category_cat_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:user_category;
	d2rq:property vocab:user_category_cat_id;
	d2rq:column "user_category.cat_id";
	d2rq:datatype xsd:decimal;
	.
map:user_category_cat_cat_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:user_category;
	d2rq:property vocab:user_category_cat_cat_id;
	d2rq:column "user_category.cat_cat_id";
	d2rq:datatype xsd:decimal;
	.
map:user_category_cat_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:user_category;
	d2rq:property vocab:user_category_cat_name;
	d2rq:column "user_category.cat_name";
	.

# Table util
map:util a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	# Sorry, I don't know which columns to put into the uriPattern
	# because the table doesn't have a primary key
	d2rq:uriPattern "util";
	d2rq:class vocab:util;
	.
map:util__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:util;
	d2rq:property rdfs:label;
	d2rq:pattern "util #";
	.
map:util_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:util;
	d2rq:property vocab:util_name;
	d2rq:column "util.name";
	.
map:util_datevalue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:util;
	d2rq:property vocab:util_datevalue;
	d2rq:column "util.datevalue";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "util.datevalue != '0000'";
	.

# Table webstat_email
map:webstat_email a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "webstat_email/@@webstat_email.ID@@";
	d2rq:class vocab:webstat_email;
	.
map:webstat_email__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:webstat_email;
	d2rq:property rdfs:label;
	d2rq:pattern "webstat_email #@@webstat_email.ID@@";
	.
map:webstat_email_ID a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:webstat_email;
	d2rq:property vocab:webstat_email_ID;
	d2rq:column "webstat_email.ID";
	d2rq:datatype xsd:long;
	.
map:webstat_email_LIST a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:webstat_email;
	d2rq:property vocab:webstat_email_LIST;
	d2rq:column "webstat_email.LIST";
	d2rq:datatype xsd:int;
	.
map:webstat_email_SENDER a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:webstat_email;
	d2rq:property vocab:webstat_email_SENDER;
	d2rq:column "webstat_email.SENDER";
	.
map:webstat_email_SUBJECT a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:webstat_email;
	d2rq:property vocab:webstat_email_SUBJECT;
	d2rq:column "webstat_email.SUBJECT";
	.
map:webstat_email_SAVEDATE a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:webstat_email;
	d2rq:property vocab:webstat_email_SAVEDATE;
	d2rq:column "webstat_email.SAVEDATE";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "webstat_email.SAVEDATE != '0000'";
	.

# Table webstat_sequence
map:webstat_sequence a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "webstat_sequence/@@webstat_sequence.SEQ_NAME@@";
	d2rq:class vocab:webstat_sequence;
	.
map:webstat_sequence__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:webstat_sequence;
	d2rq:property rdfs:label;
	d2rq:pattern "webstat_sequence #@@webstat_sequence.SEQ_NAME@@";
	.
map:webstat_sequence_SEQ_NAME a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:webstat_sequence;
	d2rq:property vocab:webstat_sequence_SEQ_NAME;
	d2rq:column "webstat_sequence.SEQ_NAME";
	.
map:webstat_sequence_SEQ_COUNT a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:webstat_sequence;
	d2rq:property vocab:webstat_sequence_SEQ_COUNT;
	d2rq:column "webstat_sequence.SEQ_COUNT";
	d2rq:datatype xsd:decimal;
	.

# Table xmlactivity
map:xmlactivity a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "xmlactivity/@@xmlactivity.id@@";
	d2rq:class vocab:xmlactivity;
	.
map:xmlactivity__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:xmlactivity;
	d2rq:property rdfs:label;
	d2rq:pattern "xmlactivity #@@xmlactivity.id@@";
	.
map:xmlactivity_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:xmlactivity;
	d2rq:property vocab:xmlactivity_id;
	d2rq:column "xmlactivity.id";
	d2rq:datatype xsd:decimal;
	.
map:xmlactivity_xml a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:xmlactivity;
	d2rq:property vocab:xmlactivity_xml;
	d2rq:column "xmlactivity.xml";
	.

# Table xmlissue
map:xmlissue a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "xmlissue/@@xmlissue.id@@";
	d2rq:class vocab:xmlissue;
	.
map:xmlissue__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:xmlissue;
	d2rq:property rdfs:label;
	d2rq:pattern "xmlissue #@@xmlissue.id@@";
	.
map:xmlissue_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:xmlissue;
	d2rq:property vocab:xmlissue_id;
	d2rq:column "xmlissue.id";
	d2rq:datatype xsd:decimal;
	.
map:xmlissue_xml a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:xmlissue;
	d2rq:property vocab:xmlissue_xml;
	d2rq:column "xmlissue.xml";
	.
map:xmlissue_readtime a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:xmlissue;
	d2rq:property vocab:xmlissue_readtime;
	d2rq:column "xmlissue.readtime";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "xmlissue.readtime != '0000'";
	.

